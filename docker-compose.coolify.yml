version: "3.8"

services:
  claude-rdp:
    build:
      context: .
      dockerfile: Dockerfile.claude-nvidia-hue
      args:
        BUILD_DATE: ${BUILD_DATE:-2024-01-01}
        VERSION: ${VERSION:-latest}
    image: claude-rdp:hue-latest
    container_name: claude-rdp-${SERVICE_FQDN_CLAUDE_RDP_3389:-local}
    hostname: ${SERVICE_FQDN_CLAUDE_RDP_3389:-claude-desktop}
    
    # Nvidia GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu, compute, video, graphics, utility, display]
    
    environment:
      # User/Group IDs
      - PUID=${SERVICE_USER_PUID:-1000}
      - PGID=${SERVICE_USER_PGID:-1000}
      - TZ=${TZ:-UTC}
      
      # Random password generation
      - RDP_PASSWORD=${SERVICE_PASSWORD_CLAUDE_RDP:-${RANDOM_PASSWORD:-$(openssl rand -base64 12)}}
      - RDP_USERNAME=hue
      
      # Nvidia settings
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      
      # Display settings
      - DISPLAY=:1
      - LC_ALL=en_US.UTF-8
      
      # Performance settings
      - __GL_SYNC_TO_VBLANK=0
      - __GL_SHADER_DISK_CACHE=1
      - __GL_SHADER_DISK_CACHE_SIZE=10737418240
      
      # Claude API (optional - set in Coolify env)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      
      # Desktop customization
      - DESKTOP_SESSION=plasma
      
      # Coolify health check URL
      - HEALTH_CHECK_URL=${SERVICE_FQDN_CLAUDE_RDP_3389:-localhost}
      
    volumes:
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
      # User data and configs - Coolify persistent storage
      - claude-rdp-config:/config
      - claude-rdp-home:/home/hue
      
      # X11 socket for GPU acceleration
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      
      # DRI for GPU access
      - /dev/dri:/dev/dri
      
    devices:
      # GPU devices
      - /dev/dri:/dev/dri
      - /dev/nvidia0:/dev/nvidia0
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-modeset:/dev/nvidia-modeset
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools
      
      # Audio devices
      - /dev/snd:/dev/snd
      
    expose:
      # RDP port (Coolify will handle the proxy)
      - "3389"
      
    labels:
      # Coolify labels
      - coolify.managed=true
      - coolify.type=application
      - coolify.name=Claude RDP Desktop
      - coolify.description=GPU-accelerated RDP desktop with Claude CLI
      - coolify.port=3389
      - coolify.protocol=tcp
      
      # Traefik labels for Coolify
      - traefik.enable=true
      - traefik.tcp.routers.claude-rdp.rule=HostSNI(`${SERVICE_FQDN_CLAUDE_RDP_3389}`)
      - traefik.tcp.routers.claude-rdp.entrypoints=rdp
      - traefik.tcp.routers.claude-rdp.service=claude-rdp
      - traefik.tcp.services.claude-rdp.loadbalancer.server.port=3389
      
    # Security options for GUI apps
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    
    # Capabilities for hardware access
    cap_add:
      - SYS_ADMIN
      - SYS_NICE
      - NET_ADMIN
    
    # Shared memory for browsers and apps
    shm_size: "4gb"
    
    # Runtime for Nvidia
    runtime: nvidia
    
    # Network mode
    networks:
      - coolify
      
    # Restart policy
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "nvidia-smi && pgrep xrdp || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Use Coolify's network
networks:
  coolify:
    external: true

# Volumes for persistence
volumes:
  claude-rdp-config:
    name: claude-rdp-config-${SERVICE_FQDN_CLAUDE_RDP_3389:-local}
  claude-rdp-home:
    name: claude-rdp-home-${SERVICE_FQDN_CLAUDE_RDP_3389:-local}